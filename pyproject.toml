[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "language-transfer"
version = "0.0.1-dev0"
description = ""
authors = ["Anes Benmerzoug <anes.benmerzoug@gmail.com>"]
license = "LGPL-2.1-only"
readme = "README.md"
repository = "https://github.com/AnesBenmerzoug/language-transfer"
keywords = [""]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Science/Research",
]
packages = [
    {include = "language_transfer", from = "src"}
]

[tool.bumpversion]
current_version = "0.0.1-dev0"
commit = false
tag = false
allow_dirty = true
# https://github.com/callowayproject/bump-my-version?tab=readme-ov-file#add-support-for-pre-release-versions
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]
files = [
    { filename = "src/language_transfer/__init__.py", search = '__version__ = "{current_version}"', replace = '__version__ = "{new_version}"' },
    { filename = "pyproject.toml", search = 'version = "{current_version}"', replace = 'version = "{new_version}"' }
]

[tool.bumpversion.parts.pre_l]
values = ["dev", "final"]
optional_value = "final"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
torch = "^2.0.0"
transformers = "^4.26.0"
fastdist = "^1.1.6"
gensim = "^4.3.0"
numpy = "<2.0.0"
scipy = "<1.13"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pre-commit = "^4.0.1"
pytest-timeout = "^2.3.1"
huggingface-hub = {extras = ["cli"], version = "^0.25.2"}
hypothesis = {extras = ["numpy"], version = "^6.115.0"}
bump-my-version = "^0.27.0"

[tool.pytest.ini_options]
addopts = "-vv --cov=language-transfer --cov-report=term-missing --cov-report=xml --durations=10"
testpaths = [
    "tests"
]
timeout = 300
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_cli = true
log_level = "INFO"

[tool.coverage.run]
source_pkgs = ["language_transfer", "tests"]
branch = true
parallel = true
omit = [
    "src/language_transfer/__about__.py",
]

[tool.coverage.paths]
language_transfer = ["src/language_transfer", "*/language-transfer/src/language_transfer"]
tests = ["tests", "*/language-transfer/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
